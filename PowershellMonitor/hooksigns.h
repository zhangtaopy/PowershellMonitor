#pragma once
#include <windows.h>
#include "include/search_algorithm/search_algorithm.h"

#ifdef _WIN64
const BYTE bySignDynamicIns0[] = {
    0x41, 0x56, 0x57, 0x56, 0x55, 0x53, 0x48, 0x83, 0xEC, 0x30, 0x48, 0x89, 0x4C, 0x24, 0x28, 0x48,
    0x8B, 0xF1, 0x48, 0x8B, 0x4A, 0x28, 0x48, 0x8B, 0xF9, 0x8B, 0x52, 0x48, 0xFF, 0xCA, 0x8B, 0xDA,
    0x48, 0x8B, 0x46, 0x08, 0x48, 0x8B, 0x68, 0x18, 0x4C, 0x8B, 0xF0, 0x3B, 0x51, 0x08, 0x73, 0xCC,
    0x48, 0x63, 0xD2, 0x48, 0x8B, 0x54, 0xD1, 0x10, 0x48, 0x8B, 0x0E, 0x48, 0x8B, 0x49, 0x30, 0x48,
    0x8B, 0x09, 0x48, 0x8B, 0x09
};

const BYTE bySignDynamicIns1[] = {
    0x41,0x57,0x41,0x56,0x41,0x55,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x48,0x48,0x89,0x4C,
    0x24,0x40,0x48,0x8B,0xF9,0x48,0x8B,0xF2,0x48,0x8B,0x5E,0x28,0x48,0x8B,0xEB,0x44,0x8B,0x76,0x48,
    0x41,0x8D,0x4E,0xFE,0x44,0x8B,0xF9,0x48,0x8B,0x57,0x08,0x4C,0x8B,0x62,0x18,0x4C,0x8B,0xEA,0x48,
    0x8B,0xD3,0x8B,0x42,0x08,0x89,0x44,0x24,0x34,0x3B,0xC8,0x0F,0x83,0xCC,0xCC,0xCC,0xCC,0x48,0x63,
    0xC9,0x48,0x8B,0x54,0xCA,0x10,0x48,0x8B,0x0F
};

const BYTE bySignDynamicIns1_[] = {
    0x53, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x48, 0x83, 0xEC, 0x30, 0x48, 0x8B,
    0xFA, 0x48, 0x8B, 0xD9, 0x48, 0x89, 0x5C, 0x24, 0x20, 0x48, 0x8B, 0x77, 0x28, 0x8B, 0x47, 0x48,
    0x44, 0x8D, 0x60, 0xFE, 0x4C, 0x8B, 0x6B, 0x08, 0x4D, 0x8B, 0x75, 0x18, 0x49, 0x63, 0xD4, 0x48,
    0x8B, 0x46, 0x08, 0x48, 0x3B, 0xD0, 0x0F, 0x83, 0x94, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x54, 0xD6,
    0x18, 0x48, 0x8B, 0x03, 0x48, 0x8B, 0x48, 0x30, 0x48, 0x8B, 0x01, 0x48, 0x8B, 0x08, 0x48, 0x0F,
    0xBA, 0xF1, 0x00, 0x48, 0x0F, 0x42, 0x09, 0xE8, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x8B, 0xE8, 0x48,
    0x8B, 0x57, 0x28, 0x8B, 0x47, 0x48, 0xFF, 0xC8, 0x48, 0x63, 0xC8, 0x48, 0x8B, 0x42, 0x08, 0x48,
    0x3B, 0xC8, 0x73, 0x5C, 0x48, 0x8B, 0x54, 0xCA, 0x18, 0x48, 0x8B, 0x03, 0x48, 0x8B, 0x48, 0x30
};

const BYTE bySignDynamicIns2[] = {
    0x41,0x57,0x41,0x56,0x41,0x55,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x58,0x48,0x89,0x4C,
    0x24,0x50,0x48,0x8B,0xF9,0x48,0x8B,0xF2,0x48,0x8B,0x5E,0x28,0x48,0x8B,0xEB,0x44,0x8B,0x76,0x48,
    0x41,0x8D,0x4E,0xFD,0x44,0x8B,0xF9,0x48,0x8B,0x57,0x08,0x4C,0x8B,0x62,0x18,0x4C,0x8B,0xEA,0x48,
    0x8B,0xD3,0x8B,0x42,0x08,0x89,0x44,0x24,0x44,0x3B,0xC8,0x0F,0x83,0xCC,0xCC,0xCC,0xCC,0x48,0x63,
    0xC9,0x48,0x8B,0x54,0xCA,0x10,0x48,0x8B,0x0F
};

const BYTE bySignDynamicIns2_[] = {
    0x53, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xEC, 0x48,
    0x48, 0x8B, 0xFA, 0x48, 0x8B, 0xD9, 0x48, 0x89, 0x5C, 0x24, 0x30, 0x48, 0x8B, 0x77, 0x28, 0x8B,
    0x47, 0x48, 0x44, 0x8D, 0x68, 0xFD, 0x4C, 0x8B, 0x73, 0x08, 0x4D, 0x8B, 0x7E, 0x18, 0x49, 0x63,
    0xD5, 0x48, 0x8B, 0x46, 0x08, 0x48, 0x3B, 0xD0, 0x0F, 0x83, 0xDA, 0x00, 0x00, 0x00, 0x48, 0x8B,
    0x54, 0xD6, 0x18, 0x48, 0x8B, 0x03, 0x48, 0x8B, 0x48, 0x30, 0x48, 0x8B, 0x01, 0x48, 0x8B, 0x08,
    0x48, 0x0F, 0xBA, 0xF1, 0x00, 0x48, 0x0F, 0x42, 0x09, 0xE8, 0xCC, 0xCC, 0xCC, 0xCC, 0x4C, 0x8B,
    0xE0, 0x48, 0x8B, 0x57, 0x28, 0x8B, 0x47, 0x48, 0x83, 0xE8, 0x02, 0x48, 0x63, 0xC8, 0x48, 0x8B,
    0x42, 0x08, 0x48, 0x3B, 0xC8, 0x0F, 0x83, 0x9D, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x54, 0xCA, 0x18,
    0x48, 0x8B, 0x03, 0x48, 0x8B, 0x48, 0x30, 0x48, 0x8B, 0x01, 0x48, 0x8B, 0x48, 0x08, 0x48, 0x0F,
    0xBA, 0xF1, 0x00
};

const BYTE bySignDynamicIns3[] = {
    0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x57, 0x56, 0x55, 0x53, 0x48, 0x83, 0xEC, 0x68,
    0x48, 0x89, 0x4C, 0x24, 0x60, 0x48, 0x8B, 0xF9, 0x48, 0x8B, 0xF2, 0x48, 0x8B, 0x5E, 0x28, 0x48,
    0x8B, 0xEB, 0x44, 0x8B, 0x76, 0x48, 0x41, 0x8D, 0x4E, 0xFC, 0x44, 0x8B, 0xF9, 0x48, 0x8B, 0x57,
    0x08, 0x4C, 0x8B, 0x62, 0x18, 0x4C, 0x8B, 0xEA, 0x48, 0x8B, 0xD3, 0x8B, 0x42, 0x08, 0x89, 0x44,
    0x24, 0x54, 0x3B, 0xC8, 0x0F, 0x83, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x63, 0xC9, 0x48, 0x8B, 0x54,
    0xCA, 0x10, 0x48, 0x8B, 0x0F, 0x48, 0x8B, 0x49, 0x30, 0x4C, 0x8B, 0x01, 0x4C, 0x89, 0x44, 0x24,
    0x58
};

const BYTE bySignDynamicIns3_[] = {
    0x53, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xEC, 0x48,
    0x48, 0x8B, 0xFA, 0x48, 0x8B, 0xD9, 0x48, 0x89, 0x5C, 0x24, 0x30, 0x48, 0x8B, 0x77, 0x28, 0x8B,
    0x47, 0x48, 0x44, 0x8D, 0x70, 0xFC, 0x4C, 0x8B, 0x7B, 0x08, 0x49, 0x8B, 0x47, 0x18, 0x48, 0x89,
    0x44, 0x24, 0x38, 0x49, 0x63, 0xD6, 0x48, 0x8B, 0x46, 0x08, 0x48, 0x3B, 0xD0, 0x0F, 0x83, 0x21,
    0x01, 0x00, 0x00, 0x48, 0x8B, 0x54, 0xD6, 0x18, 0x48, 0x8B, 0x03, 0x48, 0x8B, 0x48, 0x30, 0x48,
    0x8B, 0x01, 0x48, 0x8B, 0x08, 0x48, 0x0F, 0xBA, 0xF1, 0x00, 0x48, 0x0F, 0x42, 0x09, 0xE8, 0xCC,
    0xCC, 0xCC, 0xCC, 0x4C, 0x8B, 0xE8, 0x48, 0x8B, 0x57, 0x28, 0x8B, 0x47, 0x48, 0x83, 0xE8, 0x03,
    0x48, 0x63, 0xC8, 0x48, 0x8B, 0x42, 0x08, 0x48, 0x3B, 0xC8, 0x0F, 0x83, 0xE4, 0x00, 0x00, 0x00,
    0x48, 0x8B, 0x54, 0xCA, 0x18, 0x48, 0x8B, 0x03, 0x48, 0x8B, 0x48, 0x30
};

const BYTE bySignDynamicIns4[] = {
    0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x57, 0x56, 0x55, 0x53, 0x48, 0x83, 0xEC, 0x78,
    0x48, 0x89, 0x4C, 0x24, 0x70, 0x48, 0x8B, 0xF9, 0x48, 0x8B, 0xF2, 0x48, 0x8B, 0x5E, 0x28, 0x48,
    0x8B, 0xEB, 0x44, 0x8B, 0x76, 0x48, 0x41, 0x8D, 0x4E, 0xFB, 0x44, 0x8B, 0xF9, 0x48, 0x8B, 0x57,
    0x08, 0x4C, 0x8B, 0x62, 0x18, 0x4C, 0x8B, 0xEA, 0x48, 0x8B, 0xD3, 0x8B, 0x42, 0x08, 0x89, 0x44,
    0x24, 0x64, 0x3B, 0xC8, 0x0F, 0x83, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x63, 0xC9, 0x48, 0x8B, 0x54,
    0xCA, 0x10, 0x48, 0x8B, 0x0F, 0x48, 0x8B, 0x49, 0x30, 0x4C, 0x8B, 0x01, 0x4C, 0x89, 0x44, 0x24,
    0x68, 0x49
};

const BYTE bySignDynamicIns4_[] = {
    0x53, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xEC, 0x68,
    0x48, 0x8B, 0xDA, 0x48, 0x8B, 0xF9, 0x48, 0x89, 0x7C, 0x24, 0x40, 0x48, 0x8B, 0x73, 0x28, 0x8B,
    0x43, 0x48, 0x44, 0x8D, 0x70, 0xFB, 0x4C, 0x8B, 0x7F, 0x08, 0x49, 0x8B, 0x47, 0x18, 0x48, 0x89,
    0x44, 0x24, 0x48, 0x49, 0x63, 0xD6, 0x48, 0x8B, 0x46, 0x08, 0x48, 0x3B, 0xD0, 0x0F, 0x83, 0x68,
    0x01, 0x00, 0x00, 0x48, 0x8B, 0x54, 0xD6, 0x18, 0x48, 0x8B, 0x07, 0x48, 0x8B, 0x48, 0x30, 0x48,
    0x8B, 0x01, 0x48, 0x8B, 0x08, 0x48, 0x0F, 0xBA, 0xF1, 0x00, 0x48, 0x0F, 0x42, 0x09, 0xE8, 0xCC,
    0xCC, 0xCC, 0xCC, 0x48, 0x89, 0x44, 0x24, 0x50, 0x48, 0x8B, 0x53, 0x28, 0x8B, 0x43, 0x48, 0x83,
    0xE8, 0x04, 0x48, 0x63, 0xC8, 0x48, 0x8B, 0x42, 0x08, 0x48, 0x3B, 0xC8, 0x0F, 0x83, 0x29, 0x01,
    0x00, 0x00, 0x48, 0x8B, 0x54, 0xCA, 0x18, 0x48, 0x8B, 0x07, 0x48, 0x8B, 0x48, 0x30
};

const BYTE bySignDynamicIns6[] = {
    0x55, 0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x57, 0x56, 0x53, 0x48, 0x81, 0xEC, 0xA8,
    0x00, 0x00, 0x00, 0x48, 0x8D, 0xAC, 0x24, 0xE0, 0x00, 0x00, 0x00, 0x48, 0x89, 0x4D, 0xC0, 0x48,
    0x8B, 0xF9, 0x48, 0x8B, 0xF2, 0x48, 0x8B, 0x5E, 0x28, 0x4C, 0x8B, 0xF3, 0x44, 0x8B, 0x7E, 0x48,
    0x41, 0x8D, 0x4F, 0xF9, 0x44, 0x8B, 0xE1, 0x48, 0x8B, 0x57, 0x08, 0x4C, 0x8B, 0x6A, 0x18, 0x48,
    0x89, 0x55, 0xA0, 0x48, 0x8B, 0xD3, 0x44, 0x8B, 0x42, 0x08, 0x44, 0x89, 0x45, 0xAC, 0x41, 0x3B,
    0xC8, 0x0F, 0x83, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x63, 0xC9, 0x48, 0x8B, 0x54, 0xCA, 0x10, 0x48,
    0x8B, 0x0F, 0x48, 0x8B, 0x49, 0x30, 0x4C, 0x8B, 0x09, 0x4C, 0x89, 0x4D, 0xB0, 0x49, 0x8B, 0x09
};

const BYTE bySignDynamicIns7[] = {
    0x55, 0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x57, 0x56, 0x53, 0x48, 0x81, 0xEC, 0x88, 
    0x00, 0x00, 0x00, 0x48, 0x8D, 0xAC, 0x24, 0xC0, 0x00, 0x00, 0x00, 0x48, 0x89, 0x4D, 0xC0, 0x48, 
    0x8B, 0xF9, 0x48, 0x8B, 0xF2, 0x48, 0x8B, 0x5E, 0x28, 0x4C, 0x8B, 0xF3, 0x44, 0x8B, 0x7E, 0x48, 
    0x41, 0x8D, 0x4F, 0xFA, 0x44, 0x8B, 0xE1, 0x48, 0x8B, 0x57, 0x08, 0x4C, 0x8B, 0x6A, 0x18, 0x48, 
    0x89, 0x55, 0xA8, 0x48, 0x8B, 0xD3, 0x44, 0x8B, 0x42, 0x08, 0x44, 0x89, 0x45, 0xB4, 0x41, 0x3B, 
    0xC8, 0x0F, 0x83, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x63, 0xC9, 0x48, 0x8B, 0x54, 0xCA, 0x10, 0x48, 
    0x8B, 0x0F, 0x48, 0x8B, 0x49, 0x30, 0x4C, 0x8B, 0x09, 0x4C, 0x89, 0x4D, 0xB8, 0x49, 0x8B, 0x09, 
    0xF6, 0xC1, 0x01, 0x74, 0x04, 0x48, 0x8B, 0x49, 0xFF, 0xFF, 0x15, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 
    0x89, 0x45, 0xA0, 0x48, 0x8B, 0xCB
};

const BYTE byInvokeMethod1[] = {
    0x83, 0xEC, 0x38, 0x4D, 0x8B, 0xD1, 0x4D, 0x8B, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x8B, 0x48, 0x08,
    0x80, 0x39, 0x00, 0x4C, 0x8B, 0x41, 0x08, 0x8A, 0x40, 0x14, 0x4C, 0x89, 0x54, 0x24, 0x28, 0x88,
    0x44, 0x24, 0x20, 0xE8, 0xCC, 0xCC, 0xCC, 0xCC, 0x90, 0x48, 0x83, 0xC4, 0x38, 0xF3, 0xC3
};

const BYTE byCommandProcessorProcessRecord[] = {
    0x55, 0x41, 0x56, 0x57, 0x56, 0x53, 0x48, 0x83, 0xEC, 0x60, 0x48, 0x8D, 0xAC, 0x24, 0x80, 0x00, 
    0x00, 0x00, 0x48, 0x8B, 0xF1, 0x48, 0x8D, 0x7D, 0xB0, 0xB9, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 
    0xF3, 0xAB, 0x48, 0x8B, 0xCE, 0x48, 0x89, 0x65, 0xA0, 0x48, 0x89, 0x4D, 0x10, 0x48, 0x8B, 0x4D, 
    0x10, 0x80, 0x79, 0x50, 0x00, 0x0f, 0x85, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x8B, 0x4D, 0x10, 0xC6, 
    0x41, 0x50, 0x01, 0x48, 0x8B, 0x4D, 0x10, 0x48, 0x8B, 0x71, 0x18, 0x48, 0x8D, 0x0D, 0xCC, 0xCC, 
    0xCC, 0xCC, 0xFF, 0x15, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x8b, 0xF8, 0x48, 0x8B, 0x96, 0x80, 0x00, 
    0x00, 0x00
};

const BYTE byCommandProcessorProcessRecord_[] = {
    0x53, 0x55, 0x56, 0x57, 0x41, 0x54, 0x48, 0x83, 0xEC, 0x70, 0x48, 0x8D, 0x6C, 0x24, 0x20, 0x48, 
    0x8B, 0xF1, 0x48, 0x89, 0xB5, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0x65, 0x00, 0x48, 0xC7, 0x45, 
    0x08, 0x00, 0x00, 0x00, 0x00, 0x48, 0xC7, 0x45, 0x10, 0x00, 0x00, 0x00, 0x00, 0x48, 0xC7, 0x45, 
    0x18, 0x00, 0x00, 0x00, 0x00, 0x48, 0xC7, 0x45, 0x20, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xB6, 0x46, 
    0x68, 0x85, 0xC0, 0x0F, 0x85, 0xCC, 0xCC, 0xCC, 0xCC, 0xC6, 0x46, 0x68, 0x01, 0x48, 0x8B, 0x5E, 
    0x18, 0x41, 0xB4, 0x01, 0x80, 0x3B, 0x00, 0x48, 0x8B, 0x5B, 0x60, 0x48, 0x8D, 0x0D, 0xCC, 0xCC, 
    0xCC, 0xCC, 0xE8, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x8B, 0xF8
};

#else
const BYTE bySignDynamicIns0[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x08, 0x89, 0x4D, 0xF0, 0x8B, 0x7A, 0x14, 0x8B,
    0x5A, 0x28, 0x4B, 0x8B, 0x45, 0xF0, 0x8B, 0x70, 0x04, 0x8B, 0x46, 0x0C, 0x89, 0x45, 0xEC, 0x3B,
    0x5F, 0x04, 0x73, 0xCC, 0x8B, 0x54, 0x9F, 0x08, 0x8B, 0x45, 0xF0, 0x8B, 0x00, 0x8B, 0x40, 0x20,
    0x8B, 0x00, 0x8B, 0x08, 0xF7, 0xC1, 0x01, 0x00, 0x00, 0x00, 0x74, 0x03, 0x8B, 0x49, 0xFF
};

const BYTE bySignDynamicIns1[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x14, 0x89, 0x4D, 0xEC, 0x8B, 0xF2, 0x8B, 0x46,
    0x14, 0x89, 0x45, 0xE0, 0x8B, 0x5E, 0x28, 0x4B, 0x4B, 0x8B, 0x45, 0xEC, 0x8B, 0x78, 0x04, 0x8B,
    0x47, 0x0C, 0x89, 0x45, 0xE8, 0x8B, 0x45, 0xE0, 0x3B, 0x58, 0x04, 0x73, 0xCC, 0x8B, 0x54, 0x98,
    0x08, 0x8B, 0x45, 0xEC, 0x8B, 0x00, 0x8B, 0x40, 0x20, 0x8B, 0x00, 0x89, 0x45, 0xF0, 0x8B, 0x08,
    0xF7, 0xC1, 0x01, 0x00, 0x00, 0x00, 0x74, 0x03, 0x8B, 0x49, 0xFF
};

const BYTE bySignDynamicIns2[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x18, 0x89, 0x4D, 0xEC, 0x8B, 0xF2, 0x8B, 0x46,
    0x14, 0x89, 0x45, 0xDC, 0x8B, 0x5E, 0x28, 0x83, 0xC3, 0xFD, 0x8B, 0x45, 0xEC, 0x8B, 0x78, 0x04,
    0x8B, 0x47, 0x0C, 0x89, 0x45, 0xE8, 0x8B, 0x45, 0xDC, 0x3B, 0x58, 0x04, 0x0F, 0x83, 0xCC, 0xCC,
    0x00, 0x00, 0x8B, 0x54, 0x98, 0x08, 0x8B, 0x45, 0xEC, 0x8B, 0x00, 0x8B, 0x40, 0x20, 0x8B, 0x00,
    0x89, 0x45, 0xF0, 0x8B, 0x08, 0xF7, 0xC1, 0x01, 0x00, 0x00, 0x00, 0x74, 0x03, 0x8B, 0x49, 0xFF
};

const BYTE bySignDynamicIns3[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x20, 0x89, 0x4D, 0xE4, 0x8B, 0xF2, 0x8B, 0x7E, 
    0x14, 0x8B, 0x46, 0x28, 0x83, 0xC0, 0xFC, 0x89, 0x45, 0xEC, 0x8B, 0x45, 0xE4, 0x8B, 0x58, 0x04, 
    0x8B, 0x43, 0x0C, 0x89, 0x45, 0xE0, 0x8B, 0x45, 0xEC, 0x8B, 0x57, 0x04, 0x89, 0x55, 0xE8, 0x3B, 
    0xC2, 0x0F, 0x83, 0xCC, 0xCC, 0x00, 0x00, 0x8B, 0x54, 0x87, 0x08, 0x8B, 0x45, 0xE4, 0x8B, 0x00,
    0x8B, 0x40, 0x20, 0x8B, 0x00, 0x89, 0x45, 0xF0, 0x8B, 0x08, 0xF7, 0xC1, 0x01, 0x00, 0x00, 0x00, 
    0x74, 0x03, 0x8B, 0x49, 0xFF
};

const BYTE bySignDynamicIns4[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x28, 0x89, 0x4D, 0xE4, 0x89, 0x55, 0xE0, 0x8B,
    0x45, 0xE0, 0x8B, 0x70, 0x14, 0x8B, 0x40, 0x28, 0x89, 0x45, 0xEC, 0x8B, 0xD8, 0x83, 0xC3, 0xFB,
    0x8B, 0x45, 0xE4, 0x8B, 0x78, 0x04, 0x8B, 0x47, 0x0C, 0x89, 0x45, 0xDC, 0x8B, 0x46, 0x04, 0x89,
    0x45, 0xE8, 0x3B, 0xD8
};

const BYTE bySignDynamicIns6[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x2C, 0x89, 0x4D, 0xDC, 0x89, 0x55, 0xD8, 0x8B,
    0x45, 0xD8, 0x8B, 0x78, 0x14, 0x8B, 0x40, 0x28, 0x89, 0x45, 0xE4, 0x83, 0xC0, 0xFB, 0x89, 0x45,
    0xE8, 0x8B, 0x45, 0xDC, 0x8B, 0x58, 0x04, 0x8B, 0x43, 0x0C, 0x89, 0x45, 0xD4, 0x8B, 0x45, 0xE8,
    0x8B, 0x57, 0x04, 0x89, 0x55, 0xE0, 0x3B, 0xC2
};

const BYTE bySignDynamicIns7[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x2C, 0x89, 0x4D, 0xE4, 0x89, 0x55, 0xE0, 0x8B,
    0x45, 0xE0, 0x8B, 0x70, 0x14, 0x8B, 0x40, 0x28, 0x89, 0x45, 0xEC, 0x8B, 0xD8, 0x83, 0xC3, 0xFA,
    0x8B, 0x45, 0xE4, 0x8B, 0x78, 0x04, 0x8B, 0x47, 0x0C, 0x89, 0x45, 0xDC, 0x8B, 0x46, 0x04, 0x89,
    0x45, 0xE8, 0x3B, 0xD8, 0x0F, 0x83, 0xCC, 0xCC, 0xCC, 0xCC, 0x8B, 0x54, 0x9E, 0x08, 0x8B, 0x45,
    0xE4, 0x8B, 0x00, 0x8B, 0x40, 0x20, 0x8B, 0x00, 0x89, 0x45, 0xF0, 0x8B, 0x08, 0xF7, 0xC1, 0x01,
    0x00, 0x00, 0x00, 0x74, 0x03, 0x8B, 0x49, 0xFF
};

const BYTE byInvokeMethod1[] = {
    0x57, 0x56, 0x8B, 0xF1, 0x8B, 0x7E, 0x04, 0x8B, 0xCF, 0XFF, 0x77, 0x04, 0xFF, 0x74, 0x24, 0x14,
    0x0F, 0xB6, 0x46, 0x18, 0x50, 0xFF, 0x74, 0x24, 0x18, 0xFF, 0x15, 0xCC, 0xCC, 0xCC, 0xCC, 0x5E,
    0x5F, 0xC2, 0x08, 0x00
};

const BYTE byInvokeMethod2[] = {
    0x57, 0x56, 0x8B, 0xF1, 0x8B, 0x7E, 0x04, 0x8B, 0xCF, 0XFF, 0x77, 0x04, 0xFF, 0x74, 0x24, 0x14,
    0x0F, 0xB6, 0x46, 0x18, 0x50, 0xFF, 0x74, 0x24, 0x18, 0xE8, 0xCC, 0xCC, 0xCC, 0xCC, 0x5E, 0x5F,
    0xC2, 0x08, 0x00
};

const BYTE byCommandProcessorProcessRecord[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x48, 0x8B, 0xF1, 0x8D, 0x7D, 0xB0, 0xB9, 0x10, 0x00,
    0x00, 0x00, 0x33, 0xC0, 0xF3, 0xAB, 0x8B, 0xCE, 0x89, 0x4D, 0xBC, 0x8B, 0x45, 0xBC, 0x80, 0x78, 0x28,
    0x00, 0x0F, 0x85, 0xCC, 0xCC, 0xCC, 0xCC, 0x8B, 0x45, 0xBC, 0xC6, 0x40, 0x28, 0x01, 0x8B, 0x45, 0xBC,
    0x8B, 0x78, 0x0C, 0xB9, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF, 0x15, 0xCC, 0xCC, 0xCC, 0xCC, 0x8B, 0xF0, 0x8B, 
    0x57, 0x48, 0x6A, 0x01, 0x8B, 0xCE
};

const BYTE byCommandProcessorProcessRecord_[] = {
    0x55, 0x8B, 0xEC, 0x57, 0x56, 0x53, 0x83, 0xEC, 0x2C, 0x8B, 0xF1, 0x8D, 0x7D, 0xCC, 0xB9, 0x09, 0x00, 
    0x00, 0x00, 0x33, 0xC0, 0xF3, 0xAB, 0x8B, 0xCE, 0x33, 0xC0, 0x89, 0x45, 0xE8, 0x89, 0x4D, 0xDC, 0x8B, 
    0x45, 0xDC, 0x80, 0x78, 0x34, 0x00, 0x0F, 0x85, 0xCC, 0xCC, 0xCC, 0xCC, 0x8B, 0x45, 0xDC, 0xC6, 0x40, 
    0x34, 0x01, 0x8B, 0x45, 0xDC, 0x8B, 0x78, 0x0C, 0xB9, 0xCC, 0xCC, 0xCC, 0xCC, 0xE8, 0xCC, 0xCC, 0xCC, 
    0xCC, 0x8B, 0xF0, 0x8B, 0x57, 0x38
};
#endif

inline BOOL BM_SearchSign(PBYTE pBuf,
    int nBufLen,
    const BYTE pbySignBuf[],
    int nSignLen,
    BYTE Mask,
    PBYTE* pOutAddress)
{
    PBYTE pbySignBuffer = const_cast<PBYTE>(pbySignBuf);
    int nRet = BM_SearchPackSign(pBuf, nBufLen, pbySignBuffer, nSignLen, Mask);
    if (nRet == -1)
    {
        return FALSE;
    }
    *pOutAddress = pBuf + nRet;
    return TRUE;
}